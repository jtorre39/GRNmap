classdef LSETest < matlab.unittest.TestCase

    properties
        GRNstruct
        test_dir = '\..\..\lse_tests\'

        % global variables used in lse.m
        counter
        log2FC
        prorate
        strain_length
        b
        is_forced
    end

    methods (TestClassSetup)
       function setup (testCase)
           testCase.GRNstruct.inputFile = [testCase.test_dir '4-genes_6-edges_artificial-data_Sigmoidal_estimation_fixb-0_fixP-0_no-graph'];
           testCase.GRNstruct = struct ( ...
               'GRNParams', struct(...
                   'positions', [1, 1; 2, 2; 3, 3; 3, 4; 4, 3; 4, 4], ...
                   'num_strains', 2, ...
                   'num_times', 4, ...
                   'num_edges', 6, ...
                   'num_genes', 4, ...
                   'num_forced', 4, ...
                   'is_forced', [1; 2; 3; 4], ...
                   'b', [0; 0; 0; 0], ...
                   'wtmat', [1 0 0 0; 0 1 0 0; 0 0 1 1; 0 0 1 1], ...
                   'expression_timepoints', [0.4 0.8 1.2 1.6], ...
                   'prorate', [0.5;
                               1.0;
                               2.0;
                               1.0], ...
                   'adjacency_mat', [1 0 0 0; 0 1 0 0; 0 0 1 1; 0 0 1 1], ...
                   'alpha', 1.000000000000000e-03, ...
                   'x0', [1; 1; 1; 1] ...
                ), ...
                'controlParams', struct (...
                    'estimate_params', 0, ...
                    'kk_max', 1, ...
                    'MaxIter', 1000000, ...
                    'MaxFunEval', 1000000, ...
                    'TolFun', 1.0000e-05, ...
                    'TolX', 1.0000e-05, ...
                    'production_function', 'Sigmoid', ...
                    'fix_b', 0, ...
                    'fix_P', 0, ...
                    'simulation_timepoints', [0 0.1000 0.2000 0.3000 0.4000 0.5000 ...
                        0.6000 0.7000 0.8000  0.9000 1.0000 1.1000 1.2000 1.3000 ...
                        1.4000 1.5000  1.6000 1.7000  1.8000 1.9000 2.0000] ...
                ), ...
                'expressionData', struct(...
                    'Strain', {{'wt'};{'dcin5'}},...
                    'deletion', {0; 3}, ...
                    'model', {[];[]},...
                    't', struct ('indx', {[1 2 3]; [4 5 6]; [7 8 9]; [10 11 12]}, 't', {0.4; 0.8; 1.2; 1.6}), ...
                    'raw', {
                      [0.4000    0.4000    0.4000    0.8000    0.8000    0.8000    1.2000    1.2000    1.2000    1.6000    1.6000    1.6000; ...
                      -0.3763   -0.3763   -0.3763   -0.7067   -0.7067   -0.7067   -0.9872   -0.9872   -0.9872   -1.2174     -1.2174   -1.2174; ...
                      -0.2277   -0.2277   -0.2277   -0.4080   -0.4080   -0.4080   -0.5464   -0.5464   -0.5464   -0.6498     -0.6498   -0.6498; ...
                      0.2693    0.2693    0.2693    0.4159    0.4159    0.4159    0.4975    0.4975    0.4975    0.5416     0.5416    0.5416; ...
                      -0.2909   -0.2909   -0.2909   -0.5798   -0.5798   -0.5798   -0.8558   -0.8558   -0.8558   -1.1097     -1.1097   -1.1097 ...
                      ];
                      [0.4000    0.4000    0.4000    0.8000    0.8000    0.8000    1.2000    1.2000    1.2000    1.6000    1.6000    1.6000; ...
                      -0.3763   -0.3763   -0.3763   -0.7067   -0.7067   -0.7067   -0.9872   -0.9872   -0.9872   -1.2174   -1.2174   -1.2174; ...
                      -0.2277   -0.2277   -0.2277   -0.4080   -0.4080   -0.4080   -0.5464   -0.5464   -0.5464   -0.6498   -0.6498   -0.6498; ...
                      0         0         0         0         0         0         0         0         0         0         0         0; ...
                      -0.1393   -0.1393   -0.1393   -0.2499   -0.2499   -0.2499   -0.3361   -0.3361   -0.3361   -0.4026   -0.4026   -0.4026 ...
                    ]} ...
                ), ...
                'degRates', [1, 1, 1, 1] ...
           );

           testCase.counter       = 0;
           testCase.log2FC        = testCase.GRNstruct.expressionData;
           testCase.prorate       = testCase.GRNstruct.GRNParams.prorate;
           testCase.strain_length = length(testCase.GRNstruct.expressionData);
           testCase.b             = testCase.GRNstruct.GRNParams.b;
           testCase.is_forced     = testCase.GRNstruct.GRNParams.is_forced;
       end

       function runLSE (testCase)
           global counter log2FC prorate strain_length b is_forced

           counter       = testCase.counter;
           log2FC        = testCase.log2FC;
           prorate       = testCase.prorate;
           strain_length = testCase.strain_length;
           b             = testCase.b;
           is_forced     = testCase.is_forced;

           testCase.GRNstruct = lse(testCase.GRNstruct);
       end
   end

   methods (TestClassTeardown)
       function teardown(testCase)
          testCase.GRNstruct = {};
          clearvars -global
          close all
       end
   end

   methods (Test)
       function testLocalCounterIsNotZeroIfEstimating (testCase)

           if testCase.GRNstruct.controlParams.estimate_params
               % counter for 4-gene 6-edge Sigmoid estimation fix- b=0, P=0 >= 1600
               testCase.verifyTrue(testCase.GRNstruct.GRNOutput.counter ~= 0);
           else
               testCase.verifyEqual(testCase.GRNstruct.GRNOutput.counter, 0);
           end
       end

       function testInitialGuessesIsCorrect (testCase)
           actual = testCase.GRNstruct.locals.initial_guesses;
           expected = [1; 1; 1; 1; 1; 1; 0; 0; 0; 0; 0.5000; 1; 2; 1;];
           testCase.verifyEqual(actual, expected);
       end

       function testEstimatedGuessesIsEqualToInitialGuesses (testCase)
           if ~testCase.GRNstruct.controlParams.estimate_params
               actual = testCase.GRNstruct.locals.estimated_guesses;
               expected = testCase.GRNstruct.locals.initial_guesses;
               testCase.verifyEqual(actual, expected);
           end
       end

       function testLSEFinalIsCorrect (testCase)
           if testCase.GRNstruct.controlParams.estimate_params
               actual = testCase.GRNstruct.GRNOutput.lse_final;
               expected = 0.001761881584203;
               testCase.verifyTrue(abs(actual - expected) < 1E-14);
           end
       end

       function testLSE_0IsCorrect (testCase)
           actual = testCase.GRNstruct.GRNOutput.lse_0;
           expected = 0.047177143360482;
           testCase.verifyTrue(abs(actual - expected) < 1E-14);
       end

   end
end
